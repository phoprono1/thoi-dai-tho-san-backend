export enum ItemType {
  // Player Equipment slots (6 total)
  WEAPON = 'weapon', // V≈© kh√≠ ch√≠nh
  HELMET = 'helmet', // M≈©/N√≥n b·∫£o h·ªô
  ARMOR = 'armor', // √Åo gi√°p
  GLOVES = 'gloves', // GƒÉng tay
  BOOTS = 'boots', // Gi√†y/·ª¶ng
  ACCESSORY = 'accessory', // Ph·ª• ki·ªán (nh·∫´n, d√¢y chuy·ªÅn)

  // Pet Equipment slots (4 total)
  PET_COLLAR = 'pet_collar', // V√≤ng c·ªï pet
  PET_ARMOR = 'pet_armor', // √Åo gi√°p pet
  PET_ACCESSORY = 'pet_accessory', // Ph·ª• ki·ªán pet
  PET_WEAPON = 'pet_weapon', // V≈© kh√≠ pet

  // Non-equipment items
  CONSUMABLE = 'consumable',
  MATERIAL = 'material',
  QUEST = 'quest',
}

// Equipment slot mapping for UI
export const EQUIPMENT_SLOTS = {
  WEAPON: { name: 'V≈© kh√≠', icon: '‚öîÔ∏è', order: 1 },
  HELMET: { name: 'M≈©', icon: 'üõ°Ô∏è', order: 2 },
  ARMOR: { name: '√Åo gi√°p', icon: 'ü•º', order: 3 },
  GLOVES: { name: 'GƒÉng tay', icon: 'üß§', order: 4 },
  BOOTS: { name: 'Gi√†y', icon: 'üë¢', order: 5 },
  ACCESSORY: { name: 'Ph·ª• ki·ªán', icon: 'üíç', order: 6 },
} as const;

// Pet Equipment slot mapping
export const PET_EQUIPMENT_SLOTS = {
  PET_COLLAR: { name: 'V√≤ng c·ªï', icon: 'üéÄ', slot: 'collar', order: 1 },
  PET_ARMOR: { name: '√Åo gi√°p', icon: 'üõ°Ô∏è', slot: 'armor', order: 2 },
  PET_ACCESSORY: { name: 'Ph·ª• ki·ªán', icon: 'üíç', slot: 'accessory', order: 3 },
  PET_WEAPON: { name: 'V≈© kh√≠', icon: '‚öîÔ∏è', slot: 'weapon', order: 4 },
} as const;

// Helper function to check if item is pet equipment
export function isPetEquipmentType(type: ItemType): boolean {
  return [
    ItemType.PET_COLLAR,
    ItemType.PET_ARMOR,
    ItemType.PET_ACCESSORY,
    ItemType.PET_WEAPON,
  ].includes(type);
}

// Helper function to get pet equipment slot from item type
export function getPetEquipmentSlot(type: ItemType): string | null {
  const mapping = {
    [ItemType.PET_COLLAR]: 'collar',
    [ItemType.PET_ARMOR]: 'armor',
    [ItemType.PET_ACCESSORY]: 'accessory',
    [ItemType.PET_WEAPON]: 'weapon',
  };
  return mapping[type] || null;
}

// Helper function to check if slot matches item type
export function slotMatchesItemType(slot: string, type: ItemType): boolean {
  return getPetEquipmentSlot(type) === slot;
}

export enum ConsumableType {
  HP_POTION = 'hp_potion',
  MP_POTION = 'mp_potion', // DEPRECATED: ƒêang d√πng cho stamina/energy potion (gi·ªØ ƒë·ªÉ t∆∞∆°ng th√≠ch DB)
  MANA_POTION = 'mana_potion', // ‚úÖ NEW: L·ªç h·ªìi mana th·ª±c s·ª±
  ENERGY_POTION = 'energy_potion', // S·∫Ω migrate sau
  EXP_POTION = 'exp_potion',
  STAT_BOOST = 'stat_boost',
  PERMANENT_STAT_BOOST = 'permanent_stat_boost', // S·∫Ω migrate sau
}
